{"version":3,"sources":["state.js","components/ColorManager.js","components/Background.js","components/Floor.js","components/Orbit.js","components/Buld.js","components/Dragable.js","components/BoundingBox.js","components/Model.js","components/Cars.js","components/CameraControls.js","components/CameraButtons.js","components/Lights.js","components/Effects.js","App.js","reportWebVitals.js","index.js"],"names":["state","activeMesh","activeMeshName","cameraPos","THREE","target","shouldUpdate","styles","contentColors","position","zIndex","left","top","width","display","alignItems","justifyContent","yellow","backgroundColor","blue","red","handledClick","e","material","color","value","ColorManage","style","type","onChange","Background","props","texture","useLoader","process","gl","useThree","formatted","useMemo","image","height","fromEquirectangularTexture","attach","object","Floor","useBox","args","ref","receiveShadow","transparent","opacity","extend","OrbitControls","Orbit","camera","domElement","Bulb","useRef","scene","useEffect","lights","push","castShadow","emissive","DragControls","Dragable","groupRef","controlsRef","useState","children","setChildren","current","addEventListener","orbitControls","enabled","console","log","api","copy","velocity","set","transformGroup","BoundingBox","offset","dims","visible","mass","scale","wireframe","Model","mixer","model","GLTFLoader","path","animations","length","forEach","clip","clipAction","play","useFrame","delta","update","traverse","child","isMesh","side","Cars","fallback","Array","fill","rotation","Math","PI","CameraControls","name","getObjectByName","lerp","clone","sub","bottom","background","textAlign","borderRadius","fontSize","fontWeight","border","cursor","CameraButtons","sets","handleClick","num","onClick","right","Lights","intensity","Effects","setLights","focusDistance","focalLength","bokehScale","map","light","sun","uuid","App","ColorManager","powerPreference","antialias","stencil","depth","shadows","Buld","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e224a61.chunk.js","sourcesContent":["import * as THREE from 'three'\n// model3 name: \"Capot001_CAR_PAINT_0\"\n// model s name: \"object005_bod_0\"\nconst state = {\n    activeMesh: {},\n    activeMeshName: \"Capot001_CAR_PAINT_0\",\n    cameraPos: new THREE.Vector3(9,2,4),\n    target: new THREE.Vector3(4,0,0),\n    shouldUpdate: true\n}\n\nexport default state","import React from 'react';\nimport * as THREE from 'three'\nimport state from '../state'\nconst styles ={\n  contentColors: {\n    position: 'absolute',\n    zIndex:1,\n    left: 0,\n    top: 0,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'end',\n    justifyContent: 'center',\n  },\n  yellow:{\n    backgroundColor: 'yellow'\n  },\n  blue:{\n    backgroundColor: 'blue'\n  },\n  red:{\n    backgroundColor: 'red'\n  }\n}\n\nconst handledClick = e =>{\n\n  if ( !state.activeMesh ){\n    return\n  }\n\n  state.activeMesh.material.color = new THREE.Color(e.target.value)\n\n}\n\nconst ColorManage = () => {\n  return (\n    <div style={styles.contentColors}>\n      <input type=\"color\" onChange={handledClick}/>\n    </div>\n  );\n};\n\nexport default ColorManage;\n","import { useMemo, Suspense } from 'react'\nimport { useLoader, useThree } from '@react-three/fiber'\nimport * as THREE from 'three'\n\n\nconst Background = props => {\n  const texture = useLoader(\n    THREE.TextureLoader,\n    process.env.PUBLIC_URL + '/autoshop.jpg'\n  );\n\n  const { gl } = useThree();\n  const formatted = useMemo(() =>\n      new THREE.WebGLCubeRenderTarget(\n        texture.image.height\n      ).fromEquirectangularTexture(gl, texture)\n    ,[gl, texture])\n\n  return (\n\n      <primitive\n        attach='background'\n        object={formatted.texture}\n      />\n\n  )\n}\nexport default Background","import {useBox} from '@react-three/cannon'\n\n\nconst Floor = props =>{\n  const [ref, api] = useBox(()=>({args:[20,1,10],...props}))\n  return(\n  <mesh ref={ref} {...props} receiveShadow>\n    <boxBufferGeometry args={[200, 1, 200]} />\n    <meshPhysicalMaterial transparent opacity={0.2}/>\n  </mesh>\n  )\n}\n\nexport default Floor","import { extend, useThree } from '@react-three/fiber'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nextend({OrbitControls})\n\nconst Orbit = props =>{\n  const {camera, gl} = useThree()\n  return(\n    <orbitControls args={[camera, gl.domElement]}  attach=\"orbitControls\"/>\n  )\n}\n\nexport default Orbit","import { useEffect, useRef } from 'react'\nimport { useThree } from 'react-three-fiber'\n\nconst Bulb = props => {\n  const ref = useRef()\n  const { scene } = useThree()\n  useEffect(() => {\n    if (scene.lights) scene.lights.push(ref)\n    else scene.lights = [ref]\n  }, [])\n  return (\n    <mesh {...props} ref={ref}>\n      <pointLight\n        castShadow\n        shadow-mapSize-height={2**10}\n        shadow-mapSize-width={2**10}\n        shadow-radius={10}\n      />\n      <sphereBufferGeometry args={[0.2, 20, 20]} />\n      <meshPhongMaterial emissive='white' />\n    </mesh>\n  )\n}\n\nexport default Bulb;","import {\n  DragControls\n} from 'three/examples/jsm/controls/DragControls';\nimport { useRef, useEffect, useState } from 'react';\nimport { useThree, extend } from 'react-three-fiber';\nextend ({ DragControls });\n\nconst Dragable = props => {\n  const groupRef = useRef();\n  const controlsRef = useRef();\n  const [children, setChildren] = useState([])\n  const { camera, gl, scene } = useThree();\n\n  useEffect(() => {\n    setChildren(groupRef.current.children)\n  },[])\n\n  useEffect(() => {\n    controlsRef.current.addEventListener(\n      'hoveron',\n      e => scene.orbitControls.enabled = false\n    )\n    controlsRef.current.addEventListener(\n      'hoveroff',\n      e => scene.orbitControls.enabled = true\n    )\n    controlsRef.current.addEventListener(\n      'drag',\n      e => {\n        console.log('ññ', e)\n        e.object?.api?.position.copy(e.object.position)\n        e.object?.api?.velocity.set(0,0,0)\n      }\n    )\n  },[children])\n\n  return (\n    <group ref={groupRef}>\n      <dragControls\n        transformGroup={props.transformGroup}\n        ref={controlsRef}\n        args={[children,camera, gl.domElement]}\n      />\n      {props.children}\n    </group>\n  )\n}\n\nexport default Dragable;","import { useBox } from '@react-three/cannon'\n\nconst BoundingBox = ({\n    position = [0,0,0],\n    offset = [0,0,0],\n    dims = [1,1,1],\n    visible = false,\n    children\n}) => {\n    const [ref, api] = useBox(() => ({ mass: 1, args: dims, position: position }))\n    return (\n        <group ref={ref} api={api}>\n            <mesh scale={dims} visible={visible}>\n                <boxBufferGeometry />\n                <meshPhysicalMaterial wireframe/>\n            </mesh>\n            <group position={offset}>\n                {children}\n            </group>\n        </group>\n    )\n}\n\nexport default BoundingBox","import { useLoader, useFrame} from '@react-three/fiber';\nimport { \n    GLTFLoader \n} from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three'\n\n// small change\nconst Model = props => {\n    const model = useLoader(\n        GLTFLoader,\n      process.env.PUBLIC_URL + props.path\n    )\n\n    let mixer\n    if (model.animations.length > 0) {\n        mixer = new THREE.AnimationMixer(model.scene)\n        model.animations.forEach(clip => {\n            const action = mixer.clipAction(clip)\n            action.play()\n        })\n    }\n\n    useFrame((scene,delta) => {\n        mixer?.update(delta)\n    })\n\n    model.scene.traverse(child => {\n        if (child.isMesh) {\n            child.castShadow = true\n            child.receiveShadow = true\n            child.material.side = THREE.FrontSide\n        }\n    })\n\n    return (\n        <primitive \n            object={model.scene}\n            {...props}\n        />\n    )\n}\n\nexport default Model;","import {Suspense} from 'react';\nimport Dragable from './Dragable'\nimport BoundingBox from './BoundingBox'\nimport Model from './Model'\n\n\nconst Cars = () => {\n  return (\n    <Suspense fallback={null}>\n      <Dragable transformGroup>\n        <BoundingBox\n          //visible\n          position={[4,2,0]}\n          dims={[3,2,6]}\n          offset={[0,-0.5,0.8]}\n        >\n          <Model\n            path=\"/tesla_model_3/scene.gltf\"\n            scale={new Array(3).fill(0.01)}\n          />\n        </BoundingBox>\n      </Dragable>\n      <Dragable transformGroup>\n        <BoundingBox\n          //visible\n          position={[-4,0,0]}\n          dims={[3,2,7]}\n          offset={[0,-0.5,0.8]}\n        >\n          <Model\n            path=\"/tesla_model_s/scene.gltf\"\n            scale={new Array(3).fill(0.013)}\n          />\n        </BoundingBox>\n      </Dragable>\n      <group rotation={[0,Math.PI,0]}>\n        <Model\n          path='/mech_drone/scene.gltf'\n          scale={new Array(3).fill(0.01)}\n        />\n      </group>\n    </Suspense>\n  );\n};\n\nexport default Cars;\n","import { useFrame } from '@react-three/fiber'\nimport state from '../state'\n\nconst CameraControls = ({ }) => {\n\n    useFrame(({ camera, scene }) => {\n        if (state.activeMesh.name !== state.activeMeshName) {\n            state.activeMesh = scene.getObjectByName(\n                state.activeMeshName\n            ) || {}\n        }\n        if (state.shouldUpdate) {\n            camera.position.lerp(state.cameraPos,0.1)\n            scene.orbitControls.target.lerp(state.target,0.1)\n            scene.orbitControls.update()\n            const diff = \n                camera.position.clone()\n                .sub(state.cameraPos).length()\n            if (diff < 0.1) state.shouldUpdate = false\n        }\n    })\n    return (\n        null\n    )\n}\n\nexport default CameraControls","import state from '../state'\n\nconst style = {\n    zIndex: 1,\n    position: 'absolute',\n    bottom: '30vh',\n    // left: '40vw',\n    height: '30px',\n    width: '30px',\n    background: 'white',\n    textAlign: 'center',\n    borderRadius: '100%',\n    fontSize: 20,\n    fontWeight: 'bold',\n    opacity: 0.7,\n    border: '1px solid black',\n    cursor: 'pointer'\n}\nconst CameraButtons = () => {\n\n    const sets = {\n        // model_3\n        1: {\n            cameraPos: [9,2,4],\n            target: [4,0,0],\n            name: \"Capot001_CAR_PAINT_0\"\n        },\n        // model_s\n        2: {\n            cameraPos: [1,2,5],\n            target: [-4,0,0],\n            name: \"object005_bod_0\"\n        }\n    }\n\n    const handleClick = num => {\n        state.cameraPos.set(...sets[num].cameraPos)\n        state.target.set(...sets[num].target)\n        state.activeMeshName = sets[num].name\n        state.shouldUpdate = true\n    }\n    return (\n        <div>\n            <button\n                onClick={e => handleClick(2)}\n                style={{\n                    left: '40vw',\n                    ...style\n                }}\n            >\n                {'<'}\n            </button>\n            <button\n                onClick={e => handleClick(1)}\n                style={{\n                    right: '40vw',\n                    ...style\n                }}\n            >\n                {'>'}\n            </button>\n        </div>\n    )\n}\n\nexport default CameraButtons","import React from 'react';\n\n\n\nconst Lights = () => {\n  return (\n    <>\n      <ambientLight intensity={0.2}/>\n      <directionalLight\n        intensity={2}\n        position={[6,3,0]}\n        shadow-mapSize-height={2**10}\n        shadow-mapSize-width={2**10}\n        shadow-radius={10}\n      />\n      </>\n  );\n};\n\nexport default Lights;\n","import {\n  EffectComposer,\n  DepthOfField,\n  GodRays\n} from '@react-three/postprocessing'\nimport { useState, useEffect } from 'react'\nimport { useThree } from 'react-three-fiber'\n\nconst Effects = () => {\n  const [lights, setLights] = useState(null)\n  const { scene } = useThree()\n  useEffect(() => {\n    if (scene.lights && scene.lights.length === 3)\n      setLights(scene.lights)\n  }, [scene.lights])\n  return (\n    lights ?\n      <EffectComposer>\n        <DepthOfField\n          focusDistance={0}\n          focalLength={0.02}\n          bokehScale={2}\n          height={480}\n        />\n         {lights.map(light =>\n                <GodRays\n                    key={light.current.uuid}\n                    sun={light.current}\n                />\n            )}\n      </EffectComposer>\n      :\n      null\n  )\n}\n\nexport default Effects","import {Suspense} from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport { EffectComposer, DepthOfField, Bloom, Noise, Vignette } from '@react-three/postprocessing'\n\nimport {Physics} from '@react-three/cannon'\nimport Box from './components/Box'\nimport ColorManager from './components/ColorManager'\nimport Background from './components/Background'\nimport Floor from './components/Floor'\nimport Orbit from './components/Orbit'\nimport Buld from './components/Buld'\nimport Cars from './components/Cars'\nimport CameraControls from './components/CameraControls'\nimport CameraButtons from './components/CameraButtons'\nimport Lights from './components/Lights'\nimport Effects from './components/Effects'\n\nfunction App() {\n\n  return(\n    <div style={{width: '100vw', height:'100vh'}}>\n      <ColorManager/>\n      <CameraButtons/>\n      <Canvas\n        gl={{\n          powerPreference: \"high-performance\",\n          antialias: false,\n          stencil: false,\n          depth: false\n        }}\n        shadows\n        style={{background:'black'}}\n        camera={{position:[7,7,7]}}\n      >\n        <CameraControls/>\n\n        <fog attach=\"fog\" args={['white', 1, 50]}/>\n        <Lights/>\n        <Orbit/>\n        {/*<axesHelper args={[5]}/>*/}\n\n\n\n        <Suspense fallback={null}>\n          <Background />\n        </Suspense>\n        <Buld position={[-6,3,0]}/>\n        <Buld position={[0,3,0]}/>\n        <Buld position={[6,3,0]}/>\n\n        <Physics>\n          <Cars/>\n          {/*<Suspense fallback={null}>\n            <Box position={[0,0,0]} />\n          </Suspense>*/}\n          <Floor position={[0,-0.5,0]} />\n        </Physics>\n        <Effects/>\n      </Canvas>\n\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}